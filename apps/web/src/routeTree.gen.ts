/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as Import } from './routes/_'
import { Route as appRecipesAuthorRkeyImport } from './routes/_.(app)/recipes/$author/$rkey'

// Create Virtual Routes

const appIndexLazyImport = createFileRoute('/_/(app)/')()
const authLoginLazyImport = createFileRoute('/_/(auth)/login')()
const appRecipesNewLazyImport = createFileRoute('/_/(app)/recipes/new')()
const appRecipesAuthorIndexLazyImport = createFileRoute(
  '/_/(app)/recipes/$author/',
)()

// Create/Update Routes

const Route = Import.update({
  id: '/_',
  getParentRoute: () => rootRoute,
} as any)

const appIndexLazyRoute = appIndexLazyImport
  .update({
    id: '/(app)/',
    path: '/',
    getParentRoute: () => Route,
  } as any)
  .lazy(() => import('./routes/_.(app)/index.lazy').then((d) => d.Route))

const authLoginLazyRoute = authLoginLazyImport
  .update({
    id: '/(auth)/login',
    path: '/login',
    getParentRoute: () => Route,
  } as any)
  .lazy(() => import('./routes/_.(auth)/login.lazy').then((d) => d.Route))

const appRecipesNewLazyRoute = appRecipesNewLazyImport
  .update({
    id: '/(app)/recipes/new',
    path: '/recipes/new',
    getParentRoute: () => Route,
  } as any)
  .lazy(() => import('./routes/_.(app)/recipes/new.lazy').then((d) => d.Route))

const appRecipesAuthorIndexLazyRoute = appRecipesAuthorIndexLazyImport
  .update({
    id: '/(app)/recipes/$author/',
    path: '/recipes/$author/',
    getParentRoute: () => Route,
  } as any)
  .lazy(() =>
    import('./routes/_.(app)/recipes/$author/index.lazy').then((d) => d.Route),
  )

const appRecipesAuthorRkeyRoute = appRecipesAuthorRkeyImport.update({
  id: '/(app)/recipes/$author/$rkey',
  path: '/recipes/$author/$rkey',
  getParentRoute: () => Route,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_': {
      id: '/_'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof Import
      parentRoute: typeof rootRoute
    }
    '/_/(auth)/login': {
      id: '/_/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/_/(app)/': {
      id: '/_/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_/(app)/recipes/new': {
      id: '/_/(app)/recipes/new'
      path: '/recipes/new'
      fullPath: '/recipes/new'
      preLoaderRoute: typeof appRecipesNewLazyImport
      parentRoute: typeof rootRoute
    }
    '/_/(app)/recipes/$author/$rkey': {
      id: '/_/(app)/recipes/$author/$rkey'
      path: '/recipes/$author/$rkey'
      fullPath: '/recipes/$author/$rkey'
      preLoaderRoute: typeof appRecipesAuthorRkeyImport
      parentRoute: typeof rootRoute
    }
    '/_/(app)/recipes/$author/': {
      id: '/_/(app)/recipes/$author/'
      path: '/recipes/$author'
      fullPath: '/recipes/$author'
      preLoaderRoute: typeof appRecipesAuthorIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface RouteChildren {
  authLoginLazyRoute: typeof authLoginLazyRoute
  appIndexLazyRoute: typeof appIndexLazyRoute
  appRecipesNewLazyRoute: typeof appRecipesNewLazyRoute
  appRecipesAuthorRkeyRoute: typeof appRecipesAuthorRkeyRoute
  appRecipesAuthorIndexLazyRoute: typeof appRecipesAuthorIndexLazyRoute
}

const RouteChildren: RouteChildren = {
  authLoginLazyRoute: authLoginLazyRoute,
  appIndexLazyRoute: appIndexLazyRoute,
  appRecipesNewLazyRoute: appRecipesNewLazyRoute,
  appRecipesAuthorRkeyRoute: appRecipesAuthorRkeyRoute,
  appRecipesAuthorIndexLazyRoute: appRecipesAuthorIndexLazyRoute,
}

const RouteWithChildren = Route._addFileChildren(RouteChildren)

export interface FileRoutesByFullPath {
  '': typeof RouteWithChildren
  '/login': typeof authLoginLazyRoute
  '/': typeof appIndexLazyRoute
  '/recipes/new': typeof appRecipesNewLazyRoute
  '/recipes/$author/$rkey': typeof appRecipesAuthorRkeyRoute
  '/recipes/$author': typeof appRecipesAuthorIndexLazyRoute
}

export interface FileRoutesByTo {
  '/login': typeof authLoginLazyRoute
  '/': typeof appIndexLazyRoute
  '/recipes/new': typeof appRecipesNewLazyRoute
  '/recipes/$author/$rkey': typeof appRecipesAuthorRkeyRoute
  '/recipes/$author': typeof appRecipesAuthorIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_': typeof RouteWithChildren
  '/_/(auth)/login': typeof authLoginLazyRoute
  '/_/(app)/': typeof appIndexLazyRoute
  '/_/(app)/recipes/new': typeof appRecipesNewLazyRoute
  '/_/(app)/recipes/$author/$rkey': typeof appRecipesAuthorRkeyRoute
  '/_/(app)/recipes/$author/': typeof appRecipesAuthorIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/'
    | '/recipes/new'
    | '/recipes/$author/$rkey'
    | '/recipes/$author'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/'
    | '/recipes/new'
    | '/recipes/$author/$rkey'
    | '/recipes/$author'
  id:
    | '__root__'
    | '/_'
    | '/_/(auth)/login'
    | '/_/(app)/'
    | '/_/(app)/recipes/new'
    | '/_/(app)/recipes/$author/$rkey'
    | '/_/(app)/recipes/$author/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  Route: typeof RouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  Route: RouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_"
      ]
    },
    "/_": {
      "filePath": "_.tsx",
      "children": [
        "/_/(auth)/login",
        "/_/(app)/",
        "/_/(app)/recipes/new",
        "/_/(app)/recipes/$author/$rkey",
        "/_/(app)/recipes/$author/"
      ]
    },
    "/_/(auth)/login": {
      "filePath": "_.(auth)/login.lazy.tsx",
      "parent": "/_"
    },
    "/_/(app)/": {
      "filePath": "_.(app)/index.lazy.tsx",
      "parent": "/_"
    },
    "/_/(app)/recipes/new": {
      "filePath": "_.(app)/recipes/new.lazy.tsx",
      "parent": "/_"
    },
    "/_/(app)/recipes/$author/$rkey": {
      "filePath": "_.(app)/recipes/$author/$rkey.tsx",
      "parent": "/_"
    },
    "/_/(app)/recipes/$author/": {
      "filePath": "_.(app)/recipes/$author/index.lazy.tsx",
      "parent": "/_"
    }
  }
}
ROUTE_MANIFEST_END */
